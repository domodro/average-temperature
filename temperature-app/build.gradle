plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.openapi.generator" version "7.8.0"
}

group = 'pl.domodro'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.liquibase:liquibase-core'
	implementation 'io.swagger.core.v3:swagger-core:2.2.23'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.23'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'io.rest-assured:rest-assured'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named("bootJar") {
	archiveFileName = "temperature-app.jar"
}

tasks.named('test') {
	useJUnitPlatform()
}

openApiGenerate {
	generatorName.set("spring")
	inputSpec.set("$rootDir/spec/TemperatureApi.yaml")
	apiPackage.set("pl.domodro.temperature.api")
	invokerPackage.set("pl.domodro.temperature.api")
	modelPackage.set("pl.domodro.temperature.model")
	configOptions = [
			useSpringBoot3: "true",
			reactive: 'true',
			openApiNullable: "false",
			interfaceOnly: "true"
	]
	generateApiTests.set(false)
}

compileJava.dependsOn tasks.named("openApiGenerate")
sourceSets.main.java.srcDir layout.buildDirectory.dir("${openApiGenerate.outputDir.get()}/src/main/java")
